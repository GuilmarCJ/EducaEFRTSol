@model EducaEFRT.Models.ViewModels.ListaAsistenciaViewModel
@{
    ViewBag.Title = "Registro de Asistencia";
}

<style>
    :root {
        --primary-color: #4a6fdc;
        --dark-bg: #1a1a2e;
        --card-bg: #16213e;
        --text-color: #e6e6e6;
        --section-bg: #0f3460;
    }

    body {
        background-color: var(--dark-bg);
        color: var(--text-color);
    }

    .hora-box {
        background: #222a44;
        color: #fff;
        font-size: 2rem;
        font-weight: bold;
        text-align: center;
        padding: 18px 0;
        border-radius: 10px;
        margin-bottom: 25px;
        letter-spacing: 2px;
        box-shadow: 0 2px 8px #0002;
    }

    .busqueda-box {
        background: #16213e;
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 25px;
        display: flex;
        align-items: center;
        gap: 10px;
        max-width: 400px;
    }

        .busqueda-box label {
            color: #e6e6e6;
            font-weight: bold;
            margin-bottom: 0;
        }

        .busqueda-box input[type="text"] {
            flex: 1;
            padding: 7px 10px;
            border-radius: 5px;
            border: none;
            font-size: 1rem;
        }

        .busqueda-box button {
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 7px 18px;
            font-weight: bold;
            cursor: pointer;
        }

            .busqueda-box button:hover {
                background: #3a5bc7;
            }

    .header-section {
        background-color: var(--section-bg);
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 30px;
    }

    .header-title {
        font-size: 24px;
        font-weight: bold;
        color: #fff;
        margin-bottom: 10px;
    }

    .course-info {
        font-size: 18px;
        margin-bottom: 5px;
    }

    .table-container {
        background-color: var(--card-bg);
        border-radius: 8px;
        padding: 20px;
        overflow-x: auto;
    }

    .table {
        width: 100%;
        color: var(--text-color);
    }

        .table th {
            background-color: var(--section-bg);
            color: white;
            padding: 12px;
            text-align: center;
        }

        .table td {
            padding: 10px;
            vertical-align: middle;
            border-bottom: 1px solid #2d4059;
        }

    .checkbox-cell {
        text-align: center;
    }

    .checkbox-lg {
        width: 20px;
        height: 20px;
    }

    .btn-save {
        background-color: var(--primary-color);
        color: white;
        padding: 10px 25px;
        border-radius: 6px;
        font-weight: bold;
        border: none;
        margin-top: 20px;
    }

        .btn-save:hover {
            background-color: #3a5bc7;
            color: white;
        }
</style>

<div class="container">
    <div class="hora-box">
        <span id="hora-actual"></span>
    </div>

    <div class="busqueda-box">
        <label for="busqueda-codigo">Código estudiante:</label>
        <input type="text" id="busqueda-codigo" placeholder="Ingrese el código...">
        <button type="button" id="btn-buscar">Buscar</button>
    </div>

    <div class="header-section">
        <h1 class="header-title">REGISTRO DE ASISTENCIA</h1>
        <p class="course-info">Curso: @Model.NombreCurso</p>
        <p class="course-info">Sección: @Model.Seccion</p>
        <p class="course-info">Turno: @Model.Turno</p>
    </div>

    @using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.IdAsignacion)
        @Html.HiddenFor(m => m.NombreCurso)
        @Html.HiddenFor(m => m.Seccion)
        @Html.HiddenFor(m => m.Turno)

        <div class="table-container">
            <table class="table" id="tabla-estudiantes">
                <thead>
                    <tr>
                        <th>Código</th>
                        <th>Apellidos</th>
                        <th>Nombres</th>
                        <th>Asistió</th>
                        <th>Tardanza</th>
                        <th>Faltó</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Estudiantes.Count; i++)
                    {
                        <tr>
                            <td class="codigo-estudiante">@Model.Estudiantes[i].CodigoEstudiante</td>
                            <td>@Model.Estudiantes[i].Apellidos</td>
                            <td>@Model.Estudiantes[i].Nombres</td>
                            <td class="checkbox-cell">
                                @Html.HiddenFor(m => m.Estudiantes[i].IdMatricula)
                                @Html.HiddenFor(m => m.Estudiantes[i].CodigoEstudiante)
                                @Html.HiddenFor(m => m.Estudiantes[i].Apellidos)
                                @Html.HiddenFor(m => m.Estudiantes[i].Nombres)
                                @Html.CheckBoxFor(m => m.Estudiantes[i].Asistio,
                                         new { @class = "checkbox-lg asistencia-checkbox", id = $"asistio_{i}" })
                            </td>
                            <td class="checkbox-cell">
                                @Html.CheckBoxFor(m => m.Estudiantes[i].Tardanza,
                                         new { @class = "checkbox-lg asistencia-checkbox", id = $"tardanza_{i}" })
                            </td>
                            <td class="checkbox-cell">
                                @Html.CheckBoxFor(m => m.Estudiantes[i].Falto,
                                         new { @class = "checkbox-lg asistencia-checkbox", id = $"falto_{i}" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="text-center">
            <button type="submit" class="btn-save">Guardar Asistencia</button>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Actualizar la hora cada segundo
        function actualizarHora() {
            var ahora = new Date();
            var hora = ahora.getHours().toString().padStart(2, '0') + ':' +
                ahora.getMinutes().toString().padStart(2, '0') + ':' +
                ahora.getSeconds().toString().padStart(2, '0');
            document.getElementById('hora-actual').textContent = hora;
        }
        setInterval(actualizarHora, 1000);
        actualizarHora();

        // Buscar estudiante por código
        function filtrarPorCodigo() {
            var filtro = document.getElementById('busqueda-codigo').value.toLowerCase();
            var filas = document.querySelectorAll('#tabla-estudiantes tbody tr');
            filas.forEach(function (fila) {
                var codigo = fila.querySelector('.codigo-estudiante').textContent.toLowerCase();
                if (codigo.indexOf(filtro) > -1 || filtro === "") {
                    fila.style.display = '';
                } else {
                    fila.style.display = 'none';
                }
            });
        }
        document.getElementById('btn-buscar').addEventListener('click', filtrarPorCodigo);
        document.getElementById('busqueda-codigo').addEventListener('keyup', function (e) {
            if (e.key === 'Enter') filtrarPorCodigo();
        });

        // El resto de tu script para checkboxes y validaciones
        $(document).ready(function () {
            // Solo permitir un checkbox marcado por fila
            $('.asistencia-checkbox').change(function () {
                var row = $(this).closest('tr');
                var checkboxes = row.find('.asistencia-checkbox');

                if ($(this).is(':checked')) {
                    checkboxes.not(this).prop('checked', false);
                } else {
                    if (checkboxes.filter(':checked').length === 0) {
                        row.find('.asistencia-checkbox[id*="falto"]').prop('checked', true);
                    }
                }
            });

            $('.table tbody tr').each(function () {
                var row = $(this);
                if (row.find('.asistencia-checkbox:checked').length === 0) {
                    row.find('.asistencia-checkbox[id*="falto"]').prop('checked', true);
                }
            });

            $('form').submit(function (e) {
                var isValid = true;
                var errorMsg = "";

                $('.table tbody tr').each(function () {
                    var checkboxes = $(this).find('.asistencia-checkbox');
                    if (checkboxes.filter(':checked').length === 0) {
                        isValid = false;
                        errorMsg = "Debe marcar al menos una opción para cada estudiante";
                        return false;
                    }
                });

                if (!isValid) {
                    alert(errorMsg);
                    e.preventDefault();
                    return false;
                }

                if (!confirm('¿Está seguro de guardar la asistencia?')) {
                    e.preventDefault();
                    return false;
                }

                return true;
            });
        });
    </script>
}
 